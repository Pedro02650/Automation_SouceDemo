name: Java CI with Maven and Selenium

on:
  push:
    branches:
      - main          # A pipeline roda toda vez que há um push na branch 'main'
  pull_request:
    branches:
      - main          # Roda também quando há um PR para a branch 'main'

jobs:
  build:
    runs-on: ubuntu-latest    # Ambiente de execução será o Ubuntu mais recente

    strategy:
      matrix:
        java: [11]  # Você pode adicionar outras versões do JDK se necessário

    steps:
      # Checkout do código
      - name: Checkout code
        uses: actions/checkout@v2

      # Configuração do JDK
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.java }}
          distribution: 'adoptopenjdk'

      # Instalação do Maven (caso não esteja pré-instalado no runner)
      - name: Set up Maven
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.java }}
          distribution: 'adoptopenjdk'
      
      # Instalação do Chrome (necessário para o Selenium)
      - name: Install Google Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y wget curl unzip
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo dpkg -i google-chrome-stable_current_amd64.deb
          sudo apt --fix-broken install -y

      # Instalar o ChromeDriver (necessário para o Selenium)
      - name: Install ChromeDriver
        run: |
          LATEST=$(curl -sSL https://chromedriver.storage.googleapis.com/LATEST_RELEASE)
          wget https://chromedriver.storage.googleapis.com/${LATEST}/chromedriver_linux64.zip
          unzip chromedriver_linux64.zip
          sudo mv chromedriver /usr/local/bin

      # Rodar o Maven para compilar e executar os testes
      - name: Build and Run Tests with Maven
        run: mvn clean install

      # Publicar os resultados dos testes JUnit
      - name: Publish Test Results
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: target/test-*.xml

      # Verifica se os testes passaram com sucesso ou não
      - name: Check if tests passed
        if: ${{ failure() }}
        run: exit 1
